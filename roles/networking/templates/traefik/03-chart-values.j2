---
additionalArguments:
{% if acme_issuer == 'production' %}
- --certificatesResolvers.{{ acme_issuer }}.acme.caServer={{ acme_prod_url }}
{% else %}
- --certificatesResolvers.{{ acme_issuer }}.acme.caServer={{ acme_staging_url }}
{% endif %}
- --certificatesResolvers.{{ acme_issuer }}.acme.dnsChallenge.delayBeforeCheck={{ acme_dns_delay }}
- --certificatesResolvers.{{ acme_issuer }}.acme.dnsChallenge.provider={{ acme_dns_provider }}
- --certificatesresolvers.{{ acme_issuer }}.acme.dnschallenge.resolvers={{ acme_dns_resolver }}
- --certificatesResolvers.{{ acme_issuer }}.acme.email={{ acme_email }}
- --certificatesResolvers.{{ acme_issuer }}.acme.storage=/data/{{ acme_issuer }}-cert.json
- --entrypoints.websecure.http.tls.certresolver={{ acme_issuer }}
- --entrypoints.websecure.http.tls.domains[0].main={{ domain_name }}
- --entrypoints.websecure.http.tls.domains[0].sans=*.{{ domain_name }}
- --providers.file.filename=/config/config.yml
- --serversTransport.insecureSkipVerify=true
ports:
  web:
    redirectTo: websecure
envFrom:
- secretRef:
    name: cloudflare-api-credentials
ingressRoute:
  dashboard:
    enabled: false
persistence:
  enabled: true
  name: traefik-certs
  path: /data
  storageClass: nfs-client
volumes:
- mountPath: /config
  name: traefik
  type: configMap
service:
  enabled: true
  spec:
    loadBalancerIP: "{{ traefik_addr }}"
  type: LoadBalancer
